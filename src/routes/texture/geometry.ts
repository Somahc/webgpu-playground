export const cubeVertexSize = 4 * 10; // Byte size of a vertex. (座標と色情報とUV座標の合計)
export const cubePositionOffset = 4 * 0; // Byte offset of quad vertex position attribute.
export const cubeColorOffset = 4 * 4; // Byte offset of quad vertex color attribute.
export const cubeUVOffset = 4 * 8; // Byte offset of quad vertex UV attribute.
export const cubeVertexCount = 36; // Number of vertices in the quad.

export const cubeVertexArray = new Float32Array([
    // float4 position, float4 color float2 uv
    1, -1, 1, 1, 1, 0, 1, 1, 1, 1, -1, -1, 1, 1, 0, 0, 1, 1, 0, 1, -1, -1, -1,
    1, 0, 0, 0, 1, 0, 0, 1, -1, -1, 1, 1, 0, 0, 1, 1, 0, 1, -1, 1, 1, 1, 0, 1,
    1, 1, 1, -1, -1, -1, 1, 0, 0, 0, 1, 0, 0,

    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 1, 1, 1, 0, 1, 1, 0, 1, 1, -1, -1, 1,
    1, 0, 0, 1, 0, 0, 1, 1, -1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, -1, -1, 1, 1, 0, 0, 1, 0, 0,

    -1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, -1, 1, 1,
    1, 0, 1, 0, 0, -1, 1, -1, 1, 0, 1, 0, 1, 1, 0, -1, 1, 1, 1, 0, 1, 1, 1, 1,
    1, 1, 1, -1, 1, 1, 1, 0, 1, 0, 0,

    -1, -1, 1, 1, 0, 0, 1, 1, 1, 1, -1, 1, 1, 1, 0, 1, 1, 1, 0, 1, -1, 1, -1, 1,
    0, 1, 0, 1, 0, 0, -1, -1, -1, 1, 0, 0, 0, 1, 1, 0, -1, -1, 1, 1, 0, 0, 1, 1,
    1, 1, -1, 1, -1, 1, 0, 1, 0, 1, 0, 0,

    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 1, 1, 1, 0, 1, 1, 1, 0, 1, -1, -1, 1, 1,
    0, 0, 1, 1, 0, 0, -1, -1, 1, 1, 0, 0, 1, 1, 0, 0, 1, -1, 1, 1, 1, 0, 1, 1,
    1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,

    1, -1, -1, 1, 1, 0, 0, 1, 1, 1, -1, -1, -1, 1, 0, 0, 0, 1, 0, 1, -1, 1, -1,
    1, 0, 1, 0, 1, 0, 0, 1, 1, -1, 1, 1, 1, 0, 1, 1, 0, 1, -1, -1, 1, 1, 0, 0,
    1, 1, 1, -1, 1, -1, 1, 0, 1, 0, 1, 0, 0,
]);
// float4 position, float4 color float2 uv
//   1, -1, 1, 1,   1, 0, 1, 1,  1, 1,
//   -1, -1, 1, 1,  0, 0, 1, 1,  0, 1,
//   -1, -1, -1, 1, 0, 0, 0, 1,  0, 0,
//   1, -1, -1, 1,  1, 0, 0, 1,  1, 0,
//   1, -1, 1, 1,   1, 0, 1, 1,  1, 1,
//   -1, -1, -1, 1, 0, 0, 0, 1,  0, 0,

//   1, 1, 1, 1,    1, 1, 1, 1,  1, 1,
//   1, -1, 1, 1,   1, 0, 1, 1,  0, 1,
//   1, -1, -1, 1,  1, 0, 0, 1,  0, 0,
//   1, 1, -1, 1,   1, 1, 0, 1,  1, 0,
//   1, 1, 1, 1,    1, 1, 1, 1,  1, 1,
//   1, -1, -1, 1,  1, 0, 0, 1,  0, 0,

//   -1, 1, 1, 1,   0, 1, 1, 1,  1, 1,
//   1, 1, 1, 1,    1, 1, 1, 1,  0, 1,
//   1, 1, -1, 1,   1, 1, 0, 1,  0, 0,
//   -1, 1, -1, 1,  0, 1, 0, 1,  1, 0,
//   -1, 1, 1, 1,   0, 1, 1, 1,  1, 1,
//   1, 1, -1, 1,   1, 1, 0, 1,  0, 0,

//   -1, -1, 1, 1,  0, 0, 1, 1,  1, 1,
//   -1, 1, 1, 1,   0, 1, 1, 1,  0, 1,
//   -1, 1, -1, 1,  0, 1, 0, 1,  0, 0,
//   -1, -1, -1, 1, 0, 0, 0, 1,  1, 0,
//   -1, -1, 1, 1,  0, 0, 1, 1,  1, 1,
//   -1, 1, -1, 1,  0, 1, 0, 1,  0, 0,

//   1, 1, 1, 1,    1, 1, 1, 1,  1, 1,
//   -1, 1, 1, 1,   0, 1, 1, 1,  0, 1,
//   -1, -1, 1, 1,  0, 0, 1, 1,  0, 0,
//   -1, -1, 1, 1,  0, 0, 1, 1,  0, 0,
//   1, -1, 1, 1,   1, 0, 1, 1,  1, 0,
//   1, 1, 1, 1,    1, 1, 1, 1,  1, 1,

//   1, -1, -1, 1,  1, 0, 0, 1,  1, 1,
//   -1, -1, -1, 1, 0, 0, 0, 1,  0, 1,
//   -1, 1, -1, 1,  0, 1, 0, 1,  0, 0,
//   1, 1, -1, 1,   1, 1, 0, 1,  1, 0,
//   1, -1, -1, 1,  1, 0, 0, 1,  1, 1,
//   -1, 1, -1, 1,  0, 1, 0, 1,  0, 0,
